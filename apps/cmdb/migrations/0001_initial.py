# Generated by Django 3.1.7 on 2021-05-31 14:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnsibleExecHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=128, verbose_name='任务名称')),
                ('command_type', models.CharField(choices=[('shell', 'Shell命令'), ('win_shell', 'PowerShell命令'), ('playbook', 'Ansible PlayBook')], max_length=16, verbose_name='命令类型')),
                ('execute_user', models.CharField(default='root', max_length=32, verbose_name='执行用户')),
                ('created_at', models.CharField(max_length=128, verbose_name='创建时间')),
                ('host_count', models.IntegerField(verbose_name='机器数量')),
                ('command_content', models.TextField(max_length=1024, verbose_name='命令内容')),
                ('job_id', models.CharField(max_length=128, verbose_name='任务id')),
                ('job_status', models.CharField(default='PENDING', max_length=12, verbose_name='任务状态')),
                ('command_id', models.CharField(max_length=128, verbose_name='命令id')),
            ],
            options={
                'verbose_name': 'Ansible执行记录',
                'verbose_name_plural': 'Ansible执行记录',
                'db_table': 'ansible_execute_history',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AnsibleExecTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=128, verbose_name='模板名称')),
                ('template_dsc', models.TextField(max_length=2048, verbose_name='描述')),
                ('command_type', models.CharField(max_length=64, verbose_name='命令类型')),
                ('template_dir', models.CharField(max_length=512, verbose_name='模板路径')),
                ('created_at', models.CharField(max_length=128, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': 'Ansible执行模板',
                'verbose_name_plural': 'Ansible执行模板',
                'db_table': 'ansible_execute_template',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AnsibleSyncFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execute_user', models.CharField(default='root', max_length=32, verbose_name='执行用户')),
                ('created_at', models.CharField(max_length=128, verbose_name='创建时间')),
                ('host_count', models.IntegerField(verbose_name='机器数量')),
                ('job_id', models.CharField(max_length=128, verbose_name='任务id')),
                ('job_status', models.CharField(default='PENDING', max_length=12, verbose_name='任务状态')),
                ('command_id', models.CharField(max_length=128, verbose_name='命令id')),
                ('dst_dir', models.CharField(max_length=512, verbose_name='目标路径')),
                ('dst_filename', models.CharField(max_length=128, verbose_name='目标文件名称')),
                ('src_filename', models.CharField(max_length=512, verbose_name='源文件名称')),
            ],
            options={
                'verbose_name': 'Ansible文件分发记录',
                'verbose_name_plural': 'Ansible文件分发记录',
                'db_table': 'ansible_sendfile_history',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CloudAK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_key', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='Access Key')),
                ('access_secret', models.CharField(blank=True, max_length=32, null=True, verbose_name='Access Secret')),
                ('active', models.BooleanField(default=False, null=True, verbose_name='启用状态')),
            ],
            options={
                'verbose_name': '阿里云AK',
                'verbose_name_plural': '阿里云AK',
                'db_table': 'cloud_ak',
            },
        ),
        migrations.CreateModel(
            name='EcsAuthSSH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('password', '密码认证'), ('key', '密钥认证')], max_length=32, verbose_name='认证方式')),
                ('username', models.CharField(max_length=64, verbose_name='用户名')),
                ('password', models.CharField(blank=True, max_length=256, null=True, verbose_name='密码')),
                ('key', models.TextField(blank=True, null=True, verbose_name='密钥')),
                ('port', models.IntegerField(verbose_name='远程端口')),
                ('server_type', models.CharField(choices=[('linux', 'linux'), ('windows', 'windows')], default='linux', max_length=32, verbose_name='服务器类型')),
            ],
            options={
                'verbose_name': 'SSH远程认证',
                'verbose_name_plural': 'SSH远程认证',
                'db_table': 'ecs_ssh',
            },
        ),
        migrations.CreateModel(
            name='SecurityGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='名称')),
                ('security_group', models.CharField(blank=True, max_length=1024, null=True, verbose_name='安全组')),
                ('security_group_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='安全组类型')),
                ('desc', models.CharField(blank=True, max_length=128, null=True, verbose_name='描述')),
                ('create_time', models.CharField(blank=True, max_length=64, null=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('instance_id', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='实例id')),
                ('hostname', models.CharField(blank=True, max_length=64, null=True, verbose_name='主机名')),
                ('private_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='私网IP')),
                ('public_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='公网IP')),
                ('mac_address', models.CharField(blank=True, max_length=32, null=True, verbose_name='物理地址')),
                ('bandwidth', models.IntegerField(blank=True, default=0, null=True, verbose_name='带宽M')),
                ('cpu', models.IntegerField(blank=True, null=True, verbose_name='CPU核数')),
                ('memory', models.IntegerField(blank=True, null=True, verbose_name='内存/GB')),
                ('os_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='操作系统')),
                ('network_type', models.CharField(blank=True, choices=[('vpc', '专有网络'), ('classic', '经典网络')], max_length=16, null=True, verbose_name='网络类型')),
                ('expired_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='过期时间')),
                ('image_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='系统镜像')),
                ('status', models.CharField(choices=[('Running', '运行中'), ('Stopped', '已停止')], default='Running', max_length=32, verbose_name='实例状态')),
                ('security_group', models.CharField(blank=True, max_length=1024, null=True, verbose_name='安全组')),
                ('vpc_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='VPC')),
                ('switch_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='交换机')),
                ('serial_numer', models.CharField(blank=True, max_length=128, null=True, verbose_name='SN序列号')),
                ('os_type', models.CharField(blank=True, max_length=16, null=True, verbose_name='操作系统类型')),
                ('create_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='创建时间')),
                ('zone_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='可用区')),
                ('region_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='所属地域')),
                ('instance_charge_type', models.CharField(blank=True, choices=[('PrePaid', '包年包月'), ('PostPaid', '按量付费')], max_length=32, null=True, verbose_name='实例计费方式')),
                ('internet_charge_type', models.CharField(blank=True, choices=[('PayByTraffic', '按流量计费'), ('PayByBandwidth', '按带宽计费')], max_length=64, null=True, verbose_name='带宽计费方式')),
                ('comment', models.CharField(blank=True, max_length=64, null=True, verbose_name='实例描述')),
                ('power_state', models.CharField(choices=[('poweredOn', '打开'), ('poweredOff', '关闭')], default='poweredOn', max_length=32, verbose_name='电源')),
                ('cloud_type', models.CharField(choices=[('aliyun', '阿里云'), ('server', '物理机'), ('virtual_machine', '虚拟机')], default='aliyun', max_length=32, verbose_name='类型')),
            ],
            options={
                'verbose_name': '服务器信息',
                'verbose_name_plural': '服务器信息',
                'db_table': 'server',
                'ordering': ['instance_id'],
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disk_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='硬盘ID')),
                ('disk_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='硬盘名称')),
                ('category', models.CharField(choices=[('cloud', '普通云盘'), ('cloud_efficiency', '高效云盘'), ('cloud_ssd', 'SSD盘'), ('cloud_essd', 'ESSD云盘')], default='cloud', max_length=32, verbose_name='硬盘类型')),
                ('device', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备名')),
                ('enable_auto_snapshot', models.BooleanField(default=False, verbose_name='自动快照策略')),
                ('encrypted', models.BooleanField(default=False, verbose_name='是否加密')),
                ('create_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='创建时间')),
                ('attached_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='挂载时间')),
                ('disk_charge_type', models.CharField(choices=[('PrePaid', '包年包月'), ('PostPaid', '按量付费')], max_length=32, verbose_name='计费方式')),
                ('delete_with_instance', models.BooleanField(default=True, verbose_name='随实例释放')),
                ('expired_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='过期时间')),
                ('description', models.CharField(blank=True, max_length=128, null=True, verbose_name='硬盘描述')),
                ('size', models.IntegerField(blank=True, null=True, verbose_name='硬盘大小/GiB')),
                ('status', models.CharField(choices=[('In_use', '已挂载'), ('Available', '可用')], max_length=32, verbose_name='状态')),
                ('tags', models.CharField(blank=True, max_length=128, null=True, verbose_name='标签')),
                ('serial_number', models.CharField(blank=True, max_length=64, null=True, verbose_name='序列号')),
                ('type', models.CharField(choices=[('system', '系统盘'), ('data', '数据盘')], max_length=32, verbose_name='盘类型')),
                ('portable', models.BooleanField(default=False, verbose_name='是否可卸载')),
                ('zone_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='所属可用区')),
                ('instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disk', to='cmdb.server', verbose_name='实例ID')),
            ],
            options={
                'verbose_name': '硬盘管理',
                'verbose_name_plural': '硬盘管理',
                'db_table': 'disk',
            },
        ),
    ]
